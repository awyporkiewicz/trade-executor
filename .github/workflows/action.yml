name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # check-out repo and set-up python
      - name: trade-executor
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      # install your root project
      - name: Install project
        run: poetry install --no-interaction
      # run tests
      - name: Run tests and collect coverage
        run: pytest --cov trade_executor
      # run Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      # run super-linter against code base
      - name: Lint Code Base
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           # switched off SQLFLUFF, due to an issue, CREATE TABLE statement not parsed in sqlint dialect
          VALIDATE_SQLFLUFF: False
